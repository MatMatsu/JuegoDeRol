package juegoderolv3;

import java.util.Random;
import javax.swing.JOptionPane;
import java.applet.Applet;
import java.applet.AudioClip;

public class VentanaCombate extends javax.swing.JFrame {
    //JUGADOR 1
    Jugador playerOne;
    String namePlayerOne = "";
    String classPlayerOne = "";
    //JUGADOR 2
    Jugador playerTwo;
    String namePlayerTwo = "";
    String classPlayerTwo = "";
    //MUSICA
    AudioClip clip;
    
    public VentanaCombate() {
         //CREAR JUGADOR 1
        namePlayerOne = VentanaCrearPersonajes.nombreJugadorUno.getText();
        classPlayerOne = (String)VentanaCrearPersonajes.claseJugadorUno.getSelectedItem();
        playerOne = new Jugador(namePlayerOne, classPlayerOne);
        //CREAR JUGADOR 2
        namePlayerTwo = VentanaCrearPersonajes.nombreJugadorDos.getText();
        classPlayerTwo = (String)VentanaCrearPersonajes.claseJugadorDos.getSelectedItem();
        playerTwo = new Jugador(namePlayerTwo, classPlayerTwo);
        
        initComponents();
        
        this.setTitle("Juego de Rol - Combate");
        this.setLocationRelativeTo(null);
        //DATA JUGADOR 1 EN VENTANA
        nombreJugadorUno.setText(playerOne.getNombre());
        claseJugUno.setText(playerOne.getClase());
        vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
        energiaJugadorUno.setText(Integer.toString(playerOne.getEnergia()));
        minJugadorUno.setText(Integer.toString(playerOne.getMinPower()));
        maxJugadorUno.setText(Integer.toString(playerOne.getMaxPower()));
        setPrimerAtEspJugUno(playerOne.getNomAtEsUno());
        descPrimAtEspJugUno.setText(playerOne.getDescAtEsUno());
        setSegundoAtEspJugUno(playerOne.getNomAtEsDos());
        descSegAtEspJugUno.setText(playerOne.getDescAtEsDos());
        defensaJugUno = playerOne.isDefensa();
        imgJugUno.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerOne.getRutaImg())));
        //DATA JUGADOR 2 EN VENTANA
        nombreJugadorDos.setText(playerTwo.getNombre());
        claseJugDos.setText(playerTwo.getClase());
        vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
        energiaJugadorDos.setText(Integer.toString(playerTwo.getEnergia()));
        minJugadorDos.setText(Integer.toString(playerTwo.getMinPower()));
        maxJugadorDos.setText(Integer.toString(playerTwo.getMaxPower()));
        setPrimerAtEspJugDos(playerTwo.getNomAtEsUno());
        descPrimAtEspJugDos.setText(playerTwo.getDescAtEsUno());
        setSegundoAtEspJugDos(playerTwo.getNomAtEsDos());
        descSegAtEspJugDos.setText(playerTwo.getDescAtEsDos());
        defensaJugDos = playerTwo.isDefensa();
        imgJugDos.setIcon(new javax.swing.ImageIcon(getClass().getResource(playerTwo.getRutaImg())));
        //MUSICA PRE-COMIENZO DE BATALLA
        clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/entra_en_batalla.wav"));
        clip.play();
        //DE FORMA ALEATORIA SELECCIONA QUIEN COMIENZA LA BATALLA Y HABILITA LOS BOTONES DE ESE JUGADOR
        Random aleatorio = new Random();
        if(aleatorio.nextInt(2) == 1){
            toggleUno();
            JOptionPane.showMessageDialog(null, "Comienza el jugador " + playerOne.getNombre());
        } else {
            toggleDos();
            JOptionPane.showMessageDialog(null, "Comienza el jugador " + playerTwo.getNombre());
        }
        clip.stop();
        //MUSICA COMIENZO DE BATALLA
        clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/batalla.wav"));
        clip.loop();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nombreJugadorUno = new javax.swing.JLabel();
        nombreJugadorDos = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        vidaJugadorUno = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        energiaJugadorUno = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        minJugadorUno = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        maxJugadorUno = new javax.swing.JLabel();
        minJugadorDos = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        maxJugadorDos = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        vidaJugadorDos = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        energiaJugadorDos = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        golpeJugUno = new javax.swing.JButton();
        primerAtEspJugUno = new javax.swing.JButton();
        segundoAtEspJugUno = new javax.swing.JButton();
        defenderJugUno = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        descPrimAtEspJugUno = new javax.swing.JLabel();
        descSegAtEspJugUno = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        golpeJugDos = new javax.swing.JButton();
        primerAtEspJugDos = new javax.swing.JButton();
        segundoAtEspJugDos = new javax.swing.JButton();
        defenderJugDos = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        descPrimAtEspJugDos = new javax.swing.JLabel();
        descSegAtEspJugDos = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        claseJugUno = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        claseJugDos = new javax.swing.JLabel();
        imgJugUno = new javax.swing.JLabel();
        imgJugDos = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(974, 510));

        nombreJugadorUno.setText("jLabel1");

        nombreJugadorDos.setText("jLabel1");

        jLabel1.setText("VIDA: ");

        vidaJugadorUno.setText("jLabel2");

        jLabel2.setText("ENERGIA:");

        energiaJugadorUno.setText("jLabel3");

        jLabel3.setText("Min Power:");

        minJugadorUno.setText("jLabel4");

        jLabel5.setText("Max Power:");

        maxJugadorUno.setText("jLabel6");

        minJugadorDos.setText("jLabel4");

        jLabel6.setText("Max Power:");

        maxJugadorDos.setText("jLabel6");

        jLabel4.setText("VIDA: ");

        vidaJugadorDos.setText("jLabel2");

        jLabel7.setText("ENERGIA:");

        energiaJugadorDos.setText("jLabel3");

        jLabel8.setText("Min Power:");

        golpeJugUno.setText("GOLPE");
        golpeJugUno.setMaximumSize(new java.awt.Dimension(126, 46));
        golpeJugUno.setMinimumSize(new java.awt.Dimension(126, 46));
        golpeJugUno.setPreferredSize(new java.awt.Dimension(126, 46));
        golpeJugUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                golpeJugUnoActionPerformed(evt);
            }
        });

        primerAtEspJugUno.setText("<html><center>ATAQUE ESPECIAL UNO</center></html>");
        primerAtEspJugUno.setMaximumSize(new java.awt.Dimension(126, 46));
        primerAtEspJugUno.setMinimumSize(new java.awt.Dimension(126, 46));
        primerAtEspJugUno.setPreferredSize(new java.awt.Dimension(126, 46));
        primerAtEspJugUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primerAtEspJugUnoActionPerformed(evt);
            }
        });

        segundoAtEspJugUno.setText("<html><center>ATAQUE ESPECIAL DOS</center></html>");
        segundoAtEspJugUno.setMaximumSize(new java.awt.Dimension(147, 46));
        segundoAtEspJugUno.setMinimumSize(new java.awt.Dimension(147, 46));
        segundoAtEspJugUno.setPreferredSize(new java.awt.Dimension(147, 46));
        segundoAtEspJugUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segundoAtEspJugUnoActionPerformed(evt);
            }
        });

        defenderJugUno.setText("DEFENSA");
        defenderJugUno.setMaximumSize(new java.awt.Dimension(126, 46));
        defenderJugUno.setMinimumSize(new java.awt.Dimension(126, 46));
        defenderJugUno.setPreferredSize(new java.awt.Dimension(126, 46));
        defenderJugUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenderJugUnoActionPerformed(evt);
            }
        });

        jLabel9.setText("Golpe normal");

        descPrimAtEspJugUno.setText("jLabel10");
        descPrimAtEspJugUno.setMaximumSize(new java.awt.Dimension(300, 46));
        descPrimAtEspJugUno.setMinimumSize(new java.awt.Dimension(40, 46));
        descPrimAtEspJugUno.setPreferredSize(new java.awt.Dimension(300, 46));

        descSegAtEspJugUno.setText("jLabel11");
        descSegAtEspJugUno.setMaximumSize(new java.awt.Dimension(300, 46));
        descSegAtEspJugUno.setMinimumSize(new java.awt.Dimension(40, 46));
        descSegAtEspJugUno.setPreferredSize(new java.awt.Dimension(300, 46));

        jLabel12.setText("Recibe la mitad del daño y recupera 5 de energía");
        jLabel12.setMaximumSize(new java.awt.Dimension(300, 46));
        jLabel12.setPreferredSize(new java.awt.Dimension(300, 46));

        golpeJugDos.setText("GOLPE");
        golpeJugDos.setMaximumSize(new java.awt.Dimension(126, 46));
        golpeJugDos.setMinimumSize(new java.awt.Dimension(126, 46));
        golpeJugDos.setPreferredSize(new java.awt.Dimension(126, 46));
        golpeJugDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                golpeJugDosActionPerformed(evt);
            }
        });

        primerAtEspJugDos.setText("<html><center>ATAQUE ESPECIAL UNO</center></html>");
        primerAtEspJugDos.setMaximumSize(new java.awt.Dimension(126, 46));
        primerAtEspJugDos.setMinimumSize(new java.awt.Dimension(126, 46));
        primerAtEspJugDos.setPreferredSize(new java.awt.Dimension(126, 46));
        primerAtEspJugDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primerAtEspJugDosActionPerformed(evt);
            }
        });

        segundoAtEspJugDos.setText("<html><center>ATAQUE ESPECIAL DOS</center></html>");
        segundoAtEspJugDos.setMaximumSize(new java.awt.Dimension(126, 46));
        segundoAtEspJugDos.setMinimumSize(new java.awt.Dimension(126, 46));
        segundoAtEspJugDos.setPreferredSize(new java.awt.Dimension(126, 46));
        segundoAtEspJugDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segundoAtEspJugDosActionPerformed(evt);
            }
        });

        defenderJugDos.setText("DEFENSA");
        defenderJugDos.setMaximumSize(new java.awt.Dimension(126, 46));
        defenderJugDos.setMinimumSize(new java.awt.Dimension(126, 46));
        defenderJugDos.setPreferredSize(new java.awt.Dimension(126, 46));
        defenderJugDos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defenderJugDosActionPerformed(evt);
            }
        });

        jLabel13.setText("Golpe normal");

        descPrimAtEspJugDos.setText("jLabel10");
        descPrimAtEspJugDos.setMaximumSize(new java.awt.Dimension(300, 46));
        descPrimAtEspJugDos.setMinimumSize(new java.awt.Dimension(40, 46));
        descPrimAtEspJugDos.setPreferredSize(new java.awt.Dimension(300, 46));

        descSegAtEspJugDos.setText("jLabel11");
        descSegAtEspJugDos.setMaximumSize(new java.awt.Dimension(300, 46));
        descSegAtEspJugDos.setMinimumSize(new java.awt.Dimension(40, 46));
        descSegAtEspJugDos.setPreferredSize(new java.awt.Dimension(300, 46));

        jLabel16.setText("Recibe la mitad del daño y recupera 5 de energía");
        jLabel16.setMaximumSize(new java.awt.Dimension(300, 46));
        jLabel16.setMinimumSize(new java.awt.Dimension(234, 46));
        jLabel16.setPreferredSize(new java.awt.Dimension(300, 46));

        jLabel10.setText("CLASE: ");

        claseJugUno.setText("jLabel11");

        jLabel11.setText("CLASE: ");

        claseJugDos.setText("jLabel11");

        imgJugUno.setMaximumSize(new java.awt.Dimension(120, 120));
        imgJugUno.setMinimumSize(new java.awt.Dimension(120, 120));
        imgJugUno.setPreferredSize(new java.awt.Dimension(120, 120));

        imgJugDos.setMaximumSize(new java.awt.Dimension(120, 120));
        imgJugDos.setMinimumSize(new java.awt.Dimension(120, 120));
        imgJugDos.setPreferredSize(new java.awt.Dimension(120, 120));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(golpeJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel9))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(claseJugUno)
                            .addComponent(vidaJugadorUno)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(primerAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(descPrimAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(segundoAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(defenderJugUno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descSegAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nombreJugadorUno, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(energiaJugadorUno))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minJugadorUno))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(maxJugadorUno)))
                        .addGap(70, 70, 70)
                        .addComponent(imgJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(defenderJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(segundoAtEspJugDos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(primerAtEspJugDos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(descPrimAtEspJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descSegAtEspJugDos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(golpeJugDos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(maxJugadorDos)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(minJugadorDos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(energiaJugadorDos))
                            .addComponent(nombreJugadorDos, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vidaJugadorDos))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(claseJugDos)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel13))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(imgJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nombreJugadorUno)
                            .addComponent(nombreJugadorDos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(claseJugUno)
                            .addComponent(jLabel11)
                            .addComponent(claseJugDos))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(vidaJugadorUno))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(energiaJugadorUno))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(minJugadorUno))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(maxJugadorUno))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(golpeJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(vidaJugadorDos))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(energiaJugadorDos))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(minJugadorDos))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(maxJugadorDos))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(golpeJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13)))))
                    .addComponent(imgJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(imgJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(descPrimAtEspJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(primerAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(descPrimAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(primerAtEspJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(segundoAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descSegAtEspJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descSegAtEspJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(segundoAtEspJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defenderJugUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(defenderJugDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void primerAtEspJugUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primerAtEspJugUnoActionPerformed
        //ATAQUE ESPECIAL UNO JUGADOR 1
        int danio;
        if (playerOne.getEnergia() >= 20) {
            danio = playerOne.ataqueEspecialUno();
            playerOne.setDefensa(false);
            this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
            if (playerTwo.isDefensa()){
                danio = danio/2;
                playerTwo.setDefensa(false);
            }
            if(playerTwo.getVida() > danio) {
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " utilizo " + playerOne.getNomAtEsUno() + " e hizo " + danio + " de daño.");
                playerTwo.setVida(playerTwo.getVida()-danio);
                this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
                this.energiaJugadorUno.setText(Integer.toString(playerOne.getEnergia()));
                toggleDos();
            } else {
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " utilizo " + playerOne.getNomAtEsUno() + " e hizo " + danio + " de daño.");
                playerTwo.setVida(0);
                this.vidaJugadorDos.setText(Integer.toString(0));
                toggleTres();
                clip.stop();
                clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
                clip.play();
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " derrotó a " + playerTwo.getNombre() + ".\n" + playerOne.getNombre() + " ES EL GANADOR!");
                System.exit(0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No tienes ENERGÍA suficiente para utilizar este ataque.");
        }
    }//GEN-LAST:event_primerAtEspJugUnoActionPerformed

    private void golpeJugUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_golpeJugUnoActionPerformed
        //GOLPE NOMRMAL JUGADOR 1
        int danio;
        danio = playerOne.golpear();
        playerOne.setDefensa(false);
        this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
        if (playerTwo.isDefensa()){
            danio = danio/2;
            playerTwo.setDefensa(false);
        }
        if(playerTwo.getVida() > danio) {
            JOptionPane.showMessageDialog(null, playerOne.getNombre() + " golpeo e hizo " + danio + " de daño.");
            playerTwo.setVida(playerTwo.getVida()-danio);
            this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
            toggleDos();
        } else {
            JOptionPane.showMessageDialog(null, playerOne.getNombre() + " golpeo e hizo " + danio + " de daño.");
            playerTwo.setVida(0);
            this.vidaJugadorDos.setText(Integer.toString(0));
            toggleTres();
            clip.stop();
            clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
            clip.play();
            JOptionPane.showMessageDialog(null, playerOne.getNombre() + " derrotó a " + playerTwo.getNombre() + ".\n" + playerOne.getNombre() + " ES EL GANADOR!");
            System.exit(0);
        }
    }//GEN-LAST:event_golpeJugUnoActionPerformed

    private void segundoAtEspJugUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segundoAtEspJugUnoActionPerformed
        //ATAQUE ESPECIAL DOS JUGADOR 1
        int danio;
        if (playerOne.getEnergia() >= 40) {
            danio = playerOne.ataqueEspecialDos();
            playerOne.setDefensa(false);
            this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
            if (playerTwo.isDefensa()){
                danio = danio/2;
                playerTwo.setDefensa(false);
            }
            if(playerTwo.getVida() > danio) {
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " utilizo " + playerOne.getNomAtEsDos() + " e hizo " + danio + " de daño.");
                playerTwo.setVida(playerTwo.getVida()-danio);
                this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
                this.energiaJugadorUno.setText(Integer.toString(playerOne.getEnergia()));
                toggleDos();
            } else {
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " utilizo " + playerOne.getNomAtEsDos() + " e hizo " + danio + " de daño.");
                playerTwo.setVida(0);
                this.vidaJugadorDos.setText(Integer.toString(0));
                toggleTres();
                clip.stop();
                clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
                clip.play();
                JOptionPane.showMessageDialog(null, playerOne.getNombre() + " derrotó a " + playerTwo.getNombre() + ".\n" + playerOne.getNombre() + " ES EL GANADOR!");
                System.exit(0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No tienes ENERGÍA suficiente para utilizar este ataque.");
        }
    }//GEN-LAST:event_segundoAtEspJugUnoActionPerformed

    private void defenderJugUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenderJugUnoActionPerformed
        //MODO DEFENSA JUGADOR 1
        playerOne.setDefensa(playerOne.defender());
        energiaJugadorUno.setText(Integer.toString(playerOne.getEnergia()));
        JOptionPane.showMessageDialog(null, playerOne.getNombre() + " levanto la guardia.");
        toggleDos();
    }//GEN-LAST:event_defenderJugUnoActionPerformed

    private void golpeJugDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_golpeJugDosActionPerformed
        //GOLPE NOMRMAL JUGADOR 2
        int danio;
        danio = playerTwo.golpear();
        playerTwo.setDefensa(false);
        this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
        if (playerOne.isDefensa()){
            danio = danio/2;
            playerOne.setDefensa(false);
        }
        if(playerOne.getVida() > danio) {
            JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " golpeo e hizo " + danio + " de daño.");
            playerOne.setVida(playerOne.getVida()-danio);
            this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
            toggleUno();
        } else {
            JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " golpeo e hizo " + danio + " de daño.");
            playerOne.setVida(0);
            this.vidaJugadorUno.setText(Integer.toString(0));
            toggleTres();
            clip.stop();
            clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
            clip.play();
            JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " derrotó a " + playerOne.getNombre() + ".\n" + playerTwo.getNombre() + " ES EL GANADOR!");
            System.exit(0);
        }
    }//GEN-LAST:event_golpeJugDosActionPerformed

    private void primerAtEspJugDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primerAtEspJugDosActionPerformed
        //ATAQUE ESPECIAL UNO JUGADOR 2
        int danio;
        if (playerTwo.getEnergia() >= 20) {
            danio = playerTwo.ataqueEspecialUno();
            playerTwo.setDefensa(false);
            this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
            if (playerOne.isDefensa()){
                danio = danio/2;
                playerOne.setDefensa(false);
            }
            if(playerOne.getVida() > danio) {
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " utilizo " + playerTwo.getNomAtEsUno() + " e hizo " + danio + " de daño.");
                playerOne.setVida(playerOne.getVida()-danio);
                this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
                this.energiaJugadorDos.setText(Integer.toString(playerTwo.getEnergia()));
                toggleUno();
            } else {
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " utilizo " + playerTwo.getNomAtEsUno() + " e hizo " + danio + " de daño.");
                playerOne.setVida(0);
                this.vidaJugadorUno.setText(Integer.toString(0));
                toggleTres();
                clip.stop();
                clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
                clip.play();
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " derrotó a " + playerOne.getNombre() + ".\n" + playerTwo.getNombre() + " ES EL GANADOR!");
                System.exit(0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No tienes ENERGÍA suficiente para utilizar este ataque.");
        }
    }//GEN-LAST:event_primerAtEspJugDosActionPerformed

    private void segundoAtEspJugDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segundoAtEspJugDosActionPerformed
        //ATAQUE ESPECIAL DOS JUGADOR 2
        int danio;
        if (playerTwo.getEnergia() >= 40) {
            danio = playerTwo.ataqueEspecialDos();
            playerTwo.setDefensa(false);
            this.vidaJugadorDos.setText(Integer.toString(playerTwo.getVida()));
            if (playerOne.isDefensa()){
                danio = danio/2;
                playerOne.setDefensa(false);
            }
            if(playerOne.getVida() > danio) {
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " utilizo " + playerTwo.getNomAtEsDos() + " e hizo " + danio + " de daño.");
                playerOne.setVida(playerOne.getVida()-danio);
                this.vidaJugadorUno.setText(Integer.toString(playerOne.getVida()));
                this.energiaJugadorDos.setText(Integer.toString(playerTwo.getEnergia()));
                toggleUno();
            } else {
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " utilizo " + playerTwo.getNomAtEsDos() + " e hizo " + danio + " de daño.");
                playerOne.setVida(0);
                this.vidaJugadorUno.setText(Integer.toString(0));
                toggleTres();
                clip.stop();
                clip = Applet.newAudioClip(ClassLoader.getSystemResource("music/fin_batalla.wav"));
                clip.play();
                JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " derrotó a " + playerOne.getNombre() + ".\n" + playerTwo.getNombre() + " ES EL GANADOR!");
                System.exit(0);
            }
        } else {
            JOptionPane.showMessageDialog(null, "No tienes ENERGÍA suficiente para utilizar este ataque.");
        }
    }//GEN-LAST:event_segundoAtEspJugDosActionPerformed

    private void defenderJugDosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defenderJugDosActionPerformed
        //MODO DEFENSA JUGADOR 2
        playerTwo.setDefensa(playerTwo.defender());
        energiaJugadorDos.setText(Integer.toString(playerTwo.getEnergia()));
        JOptionPane.showMessageDialog(null, playerTwo.getNombre() + " levanto la guardia.");
        toggleUno();
    }//GEN-LAST:event_defenderJugDosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCombate.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaCombate().setVisible(true);
            }
        });
    }
    //SETTERS
    public void setPrimerAtEspJugUno(String nombre) {
        this.primerAtEspJugUno.setText(nombre);
    }
    public void setSegundoAtEspJugUno(String nombre) {
        this.segundoAtEspJugUno.setText(nombre);
    }
    public void setPrimerAtEspJugDos(String nombre) {
        this.primerAtEspJugDos.setText(nombre);
    }
    public void setSegundoAtEspJugDos(String nombre) {
        this.segundoAtEspJugDos.setText(nombre);
    }
    
    //METODOS
    //HABILITAR JUGADOR 1 Y DESHABILITAR JUGADOR 2
    public void toggleUno() {
        //HABILITA BOTONES JUGADOR 1
        this.golpeJugUno.setEnabled(true);
        this.primerAtEspJugUno.setEnabled(true);
        this.segundoAtEspJugUno.setEnabled(true);
        this.defenderJugUno.setEnabled(true);
        //DESHABILITA BOTONES JUGADOR 2
        this.golpeJugDos.setEnabled(false);
        this.primerAtEspJugDos.setEnabled(false);
        this.segundoAtEspJugDos.setEnabled(false);
        this.defenderJugDos.setEnabled(false);
    }
    //HABILITAR JUGADOR 2 Y DESHABILITAR JUGADOR 1
    public void toggleDos() {
        //DESHABILITA BOTONES JUGADOR 1
        this.golpeJugUno.setEnabled(false);
        this.primerAtEspJugUno.setEnabled(false);
        this.segundoAtEspJugUno.setEnabled(false);
        this.defenderJugUno.setEnabled(false);
        //HABILITA BOTONES JUGADOR 2
        this.golpeJugDos.setEnabled(true);
        this.primerAtEspJugDos.setEnabled(true);
        this.segundoAtEspJugDos.setEnabled(true);
        this.defenderJugDos.setEnabled(true);
    }
    //DESHABILITA TODOS LOS BOTONES
    public void toggleTres() {
        this.golpeJugUno.setEnabled(false);
        this.primerAtEspJugUno.setEnabled(false);
        this.segundoAtEspJugUno.setEnabled(false);
        this.defenderJugUno.setEnabled(false);
        this.golpeJugDos.setEnabled(false);
        this.primerAtEspJugDos.setEnabled(false);
        this.segundoAtEspJugDos.setEnabled(false);
        this.defenderJugDos.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JLabel claseJugDos;
    public javax.swing.JLabel claseJugUno;
    private javax.swing.JButton defenderJugDos;
    private javax.swing.JButton defenderJugUno;
    public javax.swing.JLabel descPrimAtEspJugDos;
    public javax.swing.JLabel descPrimAtEspJugUno;
    public javax.swing.JLabel descSegAtEspJugDos;
    public javax.swing.JLabel descSegAtEspJugUno;
    public javax.swing.JLabel energiaJugadorDos;
    public javax.swing.JLabel energiaJugadorUno;
    private javax.swing.JButton golpeJugDos;
    private javax.swing.JButton golpeJugUno;
    public static javax.swing.JLabel imgJugDos;
    public static javax.swing.JLabel imgJugUno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    public static javax.swing.JLabel maxJugadorDos;
    public static javax.swing.JLabel maxJugadorUno;
    public static javax.swing.JLabel minJugadorDos;
    public static javax.swing.JLabel minJugadorUno;
    public static javax.swing.JLabel nombreJugadorDos;
    public static javax.swing.JLabel nombreJugadorUno;
    private javax.swing.JButton primerAtEspJugDos;
    private javax.swing.JButton primerAtEspJugUno;
    private javax.swing.JButton segundoAtEspJugDos;
    private javax.swing.JButton segundoAtEspJugUno;
    public javax.swing.JLabel vidaJugadorDos;
    public javax.swing.JLabel vidaJugadorUno;
    // End of variables declaration//GEN-END:variables
    public boolean defensaJugUno;
    public boolean defensaJugDos;
}